#BlueJ class context
comment0.target=Fabrik
comment0.text=\r\n\ Klasse\ Fabrik\ beinhaltet\ die\ Methoden\ der\ Fabrik\r\n\r\n\ @author\ Rafael\ Estermann\r\n\ @version\ 15.12.2024\r\n
comment1.params=
comment1.target=Fabrik()
comment1.text=\r\n\ Konstruktor\ der\ Klasse\r\n\ Hier\ werden\ alle\ globale\ Variablen\ initialisiert\r\n
comment2.params=standardTueren\ premiumTueren
comment2.target=void\ bestellungAufgeben(int,\ int)
comment2.text=\r\n\ Mit\ dieser\ Methode\ wird\ eine\ Bestellung\ aufgegeben\r\n\ \r\n\ @param\ standardTueren\ Anzahl\ zu\ bestellender\ Standardt\u00FCren\r\n\ @param\ premiumTueren\ \ Anzahl\ zu\ bestellender\ Premiumt\u00FCren\r\n
comment3.params=
comment3.target=void\ bestellungenAusgeben()
comment3.text=\r\n\ Mit\ dieser\ Methode\ werden\ alle\ Bestellungen\ ausgegeben\r\n\ \r\n
comment4.params=
comment4.target=void\ lagerAuffuellen()
comment4.text=\r\n\ Methode\ lagerAuffuellen\ sorgt\ daf\u00FCr,\ dass\ das\ Lager\ durch\ Aufruf\ der\ Methode\r\n\ des\ Lagers\ aufgef\u00FCllt\ wird\ und\ dass\ der\ Lagerbestand\ angegeben\ wird\r\n
comment5.params=
comment5.target=java.util.ArrayList\ gibBestellungen()
comment5.text=\r\n\ Mit\ dieser\ Methode\ wird\ die\ Arrayliste\ mit\ den\ Bestellungen\ zur\u00FCckgegeben.\r\n\ Wird\ f\u00FCr\ die\ Unit\ Testklasse\ FabrikTest\ verwendet\r\n\ \r\n\ @return\ bestellteProdukte\ wird\ retourniert\r\n
comment6.params=
comment6.target=Lager\ gibLager()
comment6.text=\r\n\ Mit\ dieser\ Methode\ wird\ die\ Instanz\ des\ Lagers\ zur\u00FCckgegeben.\r\n\ Wird\ f\u00FCr\ die\ Unit\ Testklasse\ FabrikTest\ verwendet\r\n\ \r\n\ @return\ bestellteProdukte\ wird\ retourniert\r\n
comment7.params=
comment7.target=int\ gibLagerAuffuellungen()
comment7.text=\r\n\ Diese\ Methode\ wird\ verwendet,\ um\ anzugeben,\ wie\ oft\ das\ Lager\ aufgef\u00FCllt\r\n\ wurde.\r\n\ Wird\ f\u00FCr\ die\ Unit\ Testklasse\ FabrikTest\ verwendet\r\n\ \r\n\ @return\ lagerAuffuellungen\ wird\ retourniert\r\n
numComments=8
